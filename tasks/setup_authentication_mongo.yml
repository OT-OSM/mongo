---
- name: Use mongod.conf for auth initialization
  template:
    src: mongo_init_conf.j2
    dest: /etc/mongod.conf
    owner: root
    group: root
    mode: '0644'
  notify:
    - mongodb_restart

- name: Flush handlers after initial config
  meta: flush_handlers

# ---------------------------------------------
# ✅ Safe MongoDB Port Wait Logic (no localhost)
# ---------------------------------------------
- name: Check if MongoDB is already listening on {{ mongo_port }}
  shell: ss -ltnp | grep {{ mongo_port }}
  register: mongo_port_check
  changed_when: false
  ignore_errors: true

- name: Wait for MongoDB to be ready on this host
  wait_for:
    host: "{{ ansible_default_ipv4.address }}"
    port: "{{ mongo_port }}"
    delay: 5
    timeout: 60
  when: mongo_port_check.rc != 0

- name: Debug root user credentials
  debug:
    msg: "Creating root user: {{ mongo_root_admin_name }}"

# Create root admin user
- name: Create root admin user
  mongodb_user:
    login_host: localhost
    database: admin
    name: "{{ mongo_root_admin_name }}"
    password: "{{ mongo_root_admin_pwd }}"
    roles: ["root"]
    state: present
    update_password: on_create
  when: inventory_hostname in groups['mongo_master']
  run_once: true
  no_log: false

# Create admin user
- name: Create userAdminAnyDatabase user
  mongodb_user:
    login_host: localhost
    database: admin
    name: "{{ mongo_user_admin_name }}"
    password: "{{ mongo_user_admin_pwd }}"
    roles: ["userAdminAnyDatabase"]
    state: present
    update_password: on_create
    login_user: "{{ mongo_root_admin_name }}"
    login_password: "{{ mongo_root_admin_pwd }}"
    auth_source: admin
  when: inventory_hostname in groups['mongo_master']
  run_once: true
  no_log: false

# Create backup user
- name: Create backup root user
  mongodb_user:
    login_host: localhost
    database: admin
    name: "{{ mongo_root_backup_name }}"
    password: "{{ mongo_root_backup_pwd }}"
    roles: ["backup", "clusterMonitor"]
    state: present
    update_password: on_create
    login_user: "{{ mongo_root_admin_name }}"
    login_password: "{{ mongo_root_admin_pwd }}"
    auth_source: admin
  when: inventory_hostname in groups['mongo_master']
  run_once: true
  no_log: false

# Create custom users
- name: Create user-defined MongoDB users
  mongodb_user:
    login_host: localhost
    database: admin
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    roles: "{{ item.roles }}"
    state: present
    update_password: on_create
    login_user: "{{ mongo_root_admin_name }}"
    login_password: "{{ mongo_root_admin_pwd }}"
    auth_source: admin
  loop: "{{ mongo_custom_users }}"
  when: inventory_hostname in groups['mongo_master'] and mongo_custom_users | length > 0
  run_once: true
  no_log: false

# Restore actual mongod.conf after user setup
- name: Move back mongod.conf
  template:
    src: mongo_conf.j2
    dest: /etc/mongod.conf
    owner: root
    group: root
    mode: '0644'
  notify:
    - mongodb_restart
    - wait_till_mongodb_started  # ✅ updated from conditionally using localhost

- name: Flush all handlers at this point
  meta: flush_handlers
